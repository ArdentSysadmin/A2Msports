<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

       session_start(); 

	// Register controller 
	class Register extends CI_Controller {
	
		public function __construct()
		{
			parent:: __construct();
			$this->load->helper(array('form', 'url'));

			$this->load->library('form_validation');
			$this->load->library('session');
			$this->load->model('model_general', 'general');
			$this->load->model('model_register', 'reg_model');
			$this->load->model('model_news');
		}
		
		// load the registration page .... 
		public function index()
		{
			$this->load->library('form_validation');
			$data['intrests'] = $this->reg_model->get_intrests();
			//print_r($data);
			$data['results'] = $this->model_news->get_news();
			
			$this->load->view('includes/header');
			$this->load->view('view_register',$data);
			$this->load->view('includes/footer');
		}


		//register the user into the database ..
		public function save_user_data()
		{
			//rules to register a member 
		
				 $filename = 'Profilepic';
				 $filename2 = 'org_logo';

				 $config = array(
						'upload_path'	=> "./profile_pictures/",
						'allowed_types' => "gif|jpg|png|jpeg|pdf",
						'overwrite'		=>	FALSE,
						'max_size'		=> "10000", // Can be set to particular file size , here it is 2 MB(2048 Kb)
						'max_height'	=> "5000",
						'max_width'		=> "8000"
						);
					
				$this->load->library('upload');


				$this->upload->initialize($config); 

				if($this->upload->do_upload($filename))
				{

					$data['profile_pic_data'] = $this->upload->data();
					$upload_data = $data['profile_pic_data'];


					////image resize code starts....////. 

					$resize_conf =	array(
									'upload_path'  => "./profile_pictures/thumbs/",
									'source_image' => $upload_data['full_path'], 
									//'new_image'    => './tour_pictures/$tourn_id/thumbs/'.$upload_data['file_name'],
									'new_image'    => $upload_data['file_path'].'thumbs/'.$upload_data['file_name'],
									'width'        => '200',
									'height'       => '239');

					$this->load->library('image_lib');  
					$this->image_lib->initialize($resize_conf);
					
					// do it!
					if ( ! $this->image_lib->resize()){
						// if got fail.
						$error['resize'] = $this->image_lib->display_errors();		
					}
					else {
						$data_to_store['userfile'] = $upload_data['file_name'];						
						$data1['userfile'] = $upload_data['file_name'];
						//exit;
					}

					////image resize code ends .... ////
					

				  
				  //upload picture for academy ...
				   $config = array(
						'upload_path' => "./org_logos/",
						'allowed_types' => "gif|jpg|png|jpeg|pdf",
						'overwrite' => FALSE,
						'max_size' => "10000", // Can be set to particular file size , here it is 2 MB(2048 Kb)
						'max_height' => "5000",
						'max_width' => "8000"
						);

						$this->upload->initialize($config);

						if($this->upload->do_upload($filename2))
						{
							$data['org_logo_data'] = $this->upload->data();
						}

						
						$data['latt'] = $this->get_lang_latt();

						$res = $this->reg_model->insert_user($data);
					}
					else 
					{
						$data['latt'] = $this->get_lang_latt();
						$res = $this->reg_model->insert_user($data);
						//print_r($res);
						//exit;
					}

					  $email_stat = $this->user_email($res);
					 // print_r($email_stat);
					  //exit;

					 if($email_stat)
					  {

						 $data['results'] = $this->model_news->get_news();

							$this->load->view('includes/header');
							$this->load->view('view_register_complete');
							$this->load->view('includes/view_right_column' ,$data);
							$this->load->view('includes/footer');
					  }
					  else
					  {
							echo "Provided Email address is invalid. Please register with valid email address!";
					  }
	
		//	}

	}


	public function email_check($email_id = '')
	{
		$email_id =  $this->input->post('email_id');				
			$query = $this->reg_model->get_email($email_id);
			
		$status = $email_id.' '.'is already exists!';
		if($query != 1){
			$status = "";
			}                
		echo $status;

	}

	public function org_url_check($org_url = '')
	{
		$org_url =  $this->input->post('org_url');				
		$query = $this->reg_model->get_org_url($org_url);
			
		$status = $org_url.' '.'is already exists!';
		if($query != 1){
			$status = "";
			}                
		echo $status;

	}
	

	 public function terms_conditions()
	 {	
			$this->load->view('view_terms_conditions');
	 }

	public function get_lang_latt()
	{
	    // $address1 = $this->input->post('UserAddressline1');
		if($this->input->post('UserAddressline2')==""){
		 $address2 = $this->input->post('UserAddressline1');
		} else {
		 $address2 = $this->input->post('UserAddressline2');
		}
		 $country = $this->input->post('CountryName');

		 if($country == 'United States of America') {
					$state = $this->input->post('StateName');
			} else {
					$state = $this->input->post('StateName1');
			}

		 $city		= $this->input->post('CityName');
		 $zipcode	= $this->input->post('Zipcode');


		 //$address =  $address2 . ' ' .  $country . ' ' .  $state . ' ' .  $city ;
		 $address =  $zipcode . ' ' . $country;


			if(!empty($address)){

			//Formatted address
			$formattedAddr = str_replace(' ','+',$address);

			//Send request and receive json data by address
			$geocodeFromAddr = file_get_contents('http://maps.googleapis.com/maps/api/geocode/json?address='.$formattedAddr.'&sensor=true_or_false'); 

			$output1 = json_decode($geocodeFromAddr);
			
			$latitude  = 0.00; 
			$longitude = 0.00;
		
			//Get latitude and longitute from json data
			$latitude  = $output1->results[0]->geometry->location->lat; 
			$longitude = $output1->results[0]->geometry->location->lng;

			return  $latitude  . '@' . $longitude ;
			} else {
				return false;
			}
	}
		

		public function user_email($res)
		{

			$first_name = $this->input->post('Firstname');
			$last_name	= $this->input->post('Lastname');
			$email		= $this->input->post('EmailID');

			$xx = $res;
			$activation_code = $xx['auth_code'];
			
			$this->load->library('email');
			$this->email->set_newline("\r\n");
		
			$this->email->from('admin@a2msports.com', 'A2MSports');
			$this->email->to($email); 
			$this->email->subject('Activate your account at A2MSports!');

			$data = array(
             'Firstname'=> $first_name,
			 'Lastname'=> $last_name,
			 'Code' => $activation_code,
			 'page'=> 'New Registration'
			);


			$body = $this->load->view('view_email_template.php',$data,TRUE);

			$this->email->message($body);   

			$stat = $this->email->send();
			
			return $stat;
		}
	

		//checking the valid email 
		public function activate($activation_code) {
		
			
			$this->load->library('facebook');
			$code = trim($activation_code);
			
			$validated = $this->reg_model->validate_code($code);
			$data = array('act_stat' => "Activation Completed. Please login to access the website");
			
			$login = $this->facebook->getLoginUrl();
			$this->user = $this->facebook->getUser();
			
			if($this->user) {
				try {

                    $data['public_profile'] = $this->facebook->api('/me?fields=id,first_name,last_name,email,gender,locale,picture');

				   }
				   	catch (FacebookApiException $e) {
							print_r($e);
							$user = null;
				       }
			}
			
		    if ($this->user) {
				
				$data['logout'] = $this->facebook->getLogoutUrl(array("next" => base_url().'logout/fb_logout'));
				//echo "<a href='http://dev.ardentinc.com/a2msports/login/logout'>LogOut</a>" ;
			//	echo  "$data['logout']" ;
			}else {
				$data['login'] = $this->facebook->getLoginUrl();
				//echo "<a href='$login'>Login</a>" ;
			}


			if($validated === true) {
				$this->load->view('includes/header');
				$this->load->view('view_login', $data);
				$this->load->view('includes/footer');
			} else {
				// this should never happen 
				echo 'Error giving email activated confirmation , please contact to admin ';
			}


		}

		
		public function autocomplete()
		{
			
			$q = $_POST['name_startsWith'];
	
			$data['key'] = trim($q);
			$result = $this->reg_model->search_autocomplete($data);

			if($result)
			{
				$data_new = array();
				foreach($result as $row)   
				{
					$name = $row->Org_name.'|'.$row->Org_ID;
					array_push($data_new, $name);	
				}

			}
				echo json_encode($data_new);
		 }

		public function instant_register(){
		
			if($this->input->post('email')){
				$ins_user = $this->reg_model->instant_register();

				echo $ins_user;
			}
		}
		

		public function send_custom_notification()
		{
			$users = array(237,238);

			foreach($users as $user)
			{
				echo $user;
				$get_user = $this->general->get_user($user);
/*************** */

			$first_name		 = $get_user['Firstname'];
			$last_name		 = $get_user['Lastname'];
			$email			 = $get_user['EmailID'];
			$activation_code = $get_user['auth_code'];
			
			$this->load->library('email');
			$this->email->set_newline("\r\n");
		
			$this->email->from('admin@a2msports.com', 'A2MSports');
			$this->email->to($email); 
			$this->email->subject('Activate your account at A2MSports!');

			$data = array(
             'Firstname'=> $first_name,
			 'Lastname'=> $last_name,
			 'Code' => $activation_code,
			 'page'=> 'New Registration'
			);


			$body = $this->load->view('view_email_template.php',$data,TRUE);

			$this->email->message($body);   

			$stat = $this->email->send();
			
			//return $stat;
			}

/************** */
		
		}
	
	}