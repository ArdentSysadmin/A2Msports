<?php defined('BASEPATH') OR exit('No direct script access allowed');
require(APPPATH.'/libraries/REST_Controller.php');

// This can be removed if you use __autoload() in config.php OR use Modular Extensions
/** @noinspection PhpIncludeInspection */
//require APPPATH . 'libraries/REST_Controller.php';

/**
 * This is an example of a few basic user interaction methods you could use
 * all done with a hardcoded array
 *
 * @package         CodeIgniter
 * @subpackage      Rest Server
 * @category        Controller
 * @author          Phil Sturgeon, Chris Kacerguis
 * @license         MIT
 * @link            https://github.com/chriskacerguis/codeigniter-restserver
 */
//class Scores extends REST_Controller {
class Clubs extends REST_Controller {

    public function __construct() {
        // Construct the parent class
        parent::__construct();

		$this->load->model('score/model_club','mclub');
		$this->load->model('score/model_user','muser');
		$this->load->model('score/model_general','general');
    }

	public function index_get(){
		$club_id = $this->input->get('club_id');
		$user_id = $this->input->get('user_id');

		$get_club_loc = $this->mclub->get_clubs_locations($club_id);
		$data	  = array();
		$bookings = null;

		foreach($get_club_loc as $club_loc){

			$get_loc_courts = $this->mclub->get_loc_courts($club_loc->loc_id);
			$data3	  = null;

			foreach($get_loc_courts as $court) {

				$get_court_info		= $this->mclub->get_court_info($court->court_id);				
				$get_court_bookings = $this->mclub->get_user_court_bookings($court->court_id, $user_id);
				if($get_court_bookings){
					foreach($get_court_bookings as $booking) {
						$from  = date('D Y-m-d H:i:s', strtotime($booking->res_date.' '.$booking->from_time));
						$to	   = date('D Y-m-d H:i:s', strtotime($booking->res_date.' '.$booking->to_time));
						$numP  = $booking->num_players;
						$pList = $booking->players;
						$bookings[] = array('booking_id' => $booking->res_id, 
											'court_id'	 => $court->court_id, 
											'loc_id'	 => $club_loc->loc_id, 
											'court_name' => $get_court_info['court_name'], 
											'location'	 => $club_loc->location, 
											'address'	 => $club_loc->address, 
											'city'		 => $club_loc->city, 
											'state'		 => $club_loc->state, 
											'country'	 => $club_loc->country, 
											'numPlayers' => $numP, 
											'Players'	 => $pList, 
											'from'		 => $from, 
											'to'		 => $to);

					}
				//$data3[] = $bookings;
				}
			}
			
			/*if($bookings)
			$data[] = $bookings;*/
		}

		$data2['user_bookings'] = $bookings;

		$this->response($data2);
	}

	public function add_post() {
		$post_data = json_decode(file_get_contents('php://input'), true);

		$user_id					= trim($post_data['user_id'], '"');
		if($post_data['club_name']) {
			$data['Aca_name']			= addslashes(trim($post_data['club_name'], '"'));
			$data['Aca_addr1']			= trim($post_data['addr1'], '"');
			$data['Aca_addr2']			= trim($post_data['addr2'], '"');
			$data['Aca_zip']			= trim($post_data['zipcode'], '"');
			$data['Aca_city']			= trim($post_data['city'], '"');
			$data['Aca_state']			= trim($post_data['state'], '"');
			$data['Aca_country']		= trim($post_data['country'], '"');
			$data['Aca_url']			= trim($post_data['web_url'], '"');
			if($post_data['cont_name'])
				$data['Aca_contact_name']	= addslashes(trim($post_data['cont_name'], '"'));
			$data['Aca_contact_phone']	= trim($post_data['cont_phone'], '"');
			$data['Aca_contact_email']	= trim($post_data['cont_email'], '"');
			if($post_data['details'])
				$data['Aca_details']	= addslashes(trim($post_data['details'], '"'));
			$data['Aca_no_of_courts']	= trim($post_data['no_of_courts'], '"');
			$data['Aca_sport']			= json_encode(explode(',', $post_data['club_sports']));
			$data['Aca_User_id']		= trim($post_data['user_id'], '"');
			$data['Aca_timings']		= trim($post_data['timings'], '"');
		
			$ins_club  = $this->mclub->AddClub($data);

			if($ins_club) {
				$res = array('Success: ' . "Club details added successfully.");
			}
			else {
				$res = array('Error: ' . "Something went wrong!");
			}
		}
		else {
			$res = array('Success: ' . "Club name missing!");
		}

		$this->response($res);
	}

	public function details_get(){
		$club_id = $this->input->get('id');

		$get_club = $this->mclub->get_club($club_id);
		
			$data = array();
			$data['Club_ID']	= $get_club['Aca_ID'];
			$data['Club_Name']	= $get_club['Aca_name'];
			$data['Address1']	= $get_club['Aca_addr1'];
			$data['Address2']	= $get_club['Aca_addr2'];
			$data['City']		= $get_club['Aca_city'];
			$data['State']		= $get_club['Aca_state'];
			$data['Country']	= $get_club['Aca_country'];
			//$data['Zip']		= $get_club['Aca_zip'];

			$data['Club_URL']	= null;
 			if($get_club['Aca_url'])
			$data['Club_URL']	= $get_club['Aca_url'];

			$data['Club_Logo']	= null;
			if($get_club['Aca_logo'])
			$data['Club_Logo']	= base_url().'org_logos/'.$get_club['Aca_logo'];

			$data['Club_Owner'] = $get_club['Aca_User_id'];
			$data['Is_PNP'] = 0;

			if($this->mclub->is_clubs_having_courts($get_club['Aca_ID'])){
				$data['Is_PNP'] = 1;
			}

			$data['Contact_Name']  = null;
			$data['Contact_Phone'] = null;
			$data['Contact_Email'] = null;

			if($get_club['Aca_contact_name'])
			$data['Contact_Name']  = $get_club['Aca_contact_name'];

			if($get_club['Aca_contact_phone'])
			$data['Contact_Phone'] = $get_club['Aca_contact_phone'];

			if($get_club['Aca_contact_email'])
			$data['Contact_Email'] = lcfirst($get_club['Aca_contact_email']);
			$temp = null;

			if($get_club['Aca_sport']){
				$sports = json_decode($get_club['Aca_sport'], true);
				foreach($sports as $sport){
					if($sport){
					$sport_det = $this->general->get_sport($sport);
					$temp[]	   = array('sport_id' =>$sport, 'sport_title'=>$sport_det['sport_title']);
					}
				}
			}
			else{
				if($get_club['Primary_Sport']){
					$sport_det = $this->general->get_sport($get_club['Primary_Sport']);
					$temp[] = array('sport_id' =>$sport, 'sport_title'=>$sport_det['sport_title']);
				}
				else{
					$temp  = null;
				}
			}
			
			$data['Club_Timings'] = null;
			if($get_club['Aca_timings'] != 'null' and $get_club['Aca_timings'] != ''){
			$data['Club_Timings'] = $get_club['Aca_timings'];
			}
			$data['Longitude']	  = $get_club['Longitude'];
			$data['Latitude']	  = $get_club['Latitude'];
			$data['Club_Sports']  = $temp;

			$get_club_ratings = $this->mclub->get_club_ratings($club_id);
			$rating_info = null;
			$s5 = 0; $s4 = 0; $s3 = 0;  $s2 = 0;  $s1 = 0;

			if($get_club_ratings){
				foreach($get_club_ratings as $rating){
					$user_info = $this->general->get_user($rating->User_ID);
					$rating_info[] = array(
									'Rate_ID'   => $rating->Rate_ID,
									'User_ID'   => $rating->User_ID,
									'User_Name' => $user_info['Firstname']." ".$user_info['Lastname'],
									'Rating'	=> $rating->Ratings,
									'Comments'	=> $rating->Comments,
									'Date'		=> date('m-d-Y', strtotime($rating->Rated_On)),
									'Is_Anonymous' => $rating->Rate_Anonymous
									);

					if($rating->Ratings==5)
					$s5+=1;
					
					if($rating->Ratings==4)
					$s4+=1;
					
					if($rating->Ratings==3)
					$s3+=1;
					
					if($rating->Ratings==2)
					$s2+=1;
					
					if($rating->Ratings==1)
					$s1+=1;
					
				}
			}

			$avg_star_rating = ($s5*5 + $s4*4 + $s3*3 + $s2*2 + $s1*1) / ($s5 + $s4 + $s3 + $s2 + $s1);

			$data['Club_Avg_Rating'] = $avg_star_rating;
			$data['Club_Ratings']	 = $rating_info;
			
			/*
			$get_club_members = $this->mclub->get_club_members($club_id);
			
			foreach($get_club_members as $member){
				$mem_id = null;
				if($member->Membership_ID){
					$mem_id = $member->Membership_ID;
				}
				$club_members[] = array(
								'user_id'		=> $member->Users_ID,
								'firstname'		=> $member->Firstname,
								'lastname'		=> $member->Lastname,
								'membership_id' => $mem_id,		
							  );
			}

			$data['Club_Members']	 = $club_members;
			*/

			/*
			$get_club_coaches = $this->mclub->get_club_coaches($club_id);

			foreach($get_club_coaches as $coach){

				$club_coaches[] = array(
								'user_id'		=> $coach->Users_ID,
								'firstname'		=> $coach->Firstname,
								'lastname'		=> $coach->Lastname,
								'coach_profile' => $coach->coach_profile,		
								'coach_website' => $coach->Coach_Website,	
								'coach_sport'	=> trim($coach->coach_sport),	
								'sport_title'	=> $coach->Sportname	
							  );
			}

			$data['Club_Coaches'] = $club_coaches;
			*/

			$temp2  = null;
			$get_club_loc = $this->mclub->get_clubs_locations($club_id);
			
			if($get_club_loc){
				foreach($get_club_loc as $club_loc){
					$data2 = array();
					$data2['loc_id']   = $club_loc->loc_id;
					$data2['location'] = $club_loc->location;
					$data2['address']  = $club_loc->address;
					$data2['city']     = $club_loc->city;
					$data2['state']    = $club_loc->state;
					$data2['longitude'] = $club_loc->longitude;
					$data2['latitude'] = $club_loc->latitude;
					$temp2[] = $data2;
				}
			}
			$data['Club_court_locations'] = $temp2;
			
			$data2 = $data;

		$this->response($data2);
	}

	public function listAll_get(){
		$user_id	   = $this->input->get('user_id');
		$get_club_list = $this->mclub->get_clubs($user_id);
		/*$this->response($get_club_list);
		exit;*/
		foreach($get_club_list as $club) {
			$data = array();
			$data['Club_ID']	= $club->Aca_ID;
			$data['Club_Name']	= $club->Aca_name;
			//$data['Address1']	= $club->Aca_addr1;
			//$data['Address2']	= $club->Aca_addr2;
			$data['City']		= $club->Aca_city;
			$data['State']		= $club->Aca_state;
			//$data['Country']	= $club->Aca_country;
			//$data['Zip']		= $club->Aca_zip;

			//$data['Club_URL']	= null;
 			//if($club->Aca_url)
			//$data['Club_URL']	= $club->Aca_url;

			$data['Club_Logo']	= null;
			if($club->Aca_logo)
			$data['Club_Logo']	= base_url().'org_logos/'.$club->Aca_logo;
			$data['Club_Owner'] = $club->Aca_User_id;

			$data['Contact_Name']  = null;
			//$data['Contact_Phone'] = null;
			//$data['Contact_Email'] = null;

			if($club->Aca_contact_name)
			$data['Contact_Name']  = $club->Aca_contact_name;
			$data['Latitude']      = $club->Latitude;
			$data['Longitude']     = $club->Longitude;
			
			$is_enrolled = false;

			$check_enroll = $this->mclub->is_enrolled($user_id, $club->Aca_ID);

			if($check_enroll)
				$is_enrolled = true;

			$data['Enrolled']     = $is_enrolled;
			
			//if($club->Aca_contact_phone)
			//$data['Contact_Phone'] = $club->Aca_contact_phone;

			//if($club->Aca_contact_email)
			//$data['Contact_Email'] = $club->Aca_contact_email;
			$temp = null;

			if($club->Aca_sport){
				$sports = json_decode($club->Aca_sport, true);
				foreach($sports as $sport){
					if($sport){
					$sport_det = $this->general->get_sport($sport);
					$temp[] = array('sport_id' =>$sport,'sport_title'=>$sport_det['sport_title']);
					}
				}
			}
			else{
				if($club->Primary_Sport){
					$sport_det = $this->general->get_sport($club->Primary_Sport);
					$temp[] = array('sport_id' =>$sport,'sport_title'=>$sport_det['sport_title']);
				}
				else{
					$temp  = null;
				}
			}

			$data['Club_Sports'] = $temp;


			$temp1  = null;
			$get_club_loc = $this->mclub->get_clubs_locations($club->Aca_ID);
			
			if($get_club_loc){
				foreach($get_club_loc as $club_loc){
					$data2 = array();
					$data2['loc_id']   = $club_loc->loc_id;
					$data2['location'] = $club_loc->location;
					$data2['address']  = $club_loc->address;
					$data2['city']     = $club_loc->city;
					$data2['state']    = $club_loc->state;
					$data2['longitude'] = $club_loc->longitude;
					$data2['latitude'] = $club_loc->latitude;
					$temp1[] = $data2;
				}
			}
			$data['Club_court_locations'] = $temp1;

			$data3[] = $data;
			/*echo "<pre>";
			print_r($data2);*/
			//exit;
		}

		$this->response($data3);
	}

	public function coachList_get() {
		$club_id = $this->input->get('club_id');

			$get_club_coaches = $this->mclub->get_club_coaches($club_id);

			foreach($get_club_coaches as $coach){

				$prof_pic = base_url().'profile_pictures/'.'default-profile.png';
				if($coach->Profilepic){
				$prof_pic = base_url().'profile_pictures/'.$coach->Profilepic;
				}

				$club_coaches[] = array(
								'Users_ID'		=> $coach->Users_ID,
								'Firstname'		=> $coach->Firstname,
								'Lastname'		=> $coach->Lastname,
								'EmailID'		=> $coach->EmailID,
								'AlternateEmailID'	=> $coach->AlternateEmailID,
								'DOB'				=> $coach->DOB,
								'Gender'			=> $coach->Gender,
								'UserAddressline1'	=> $coach->UserAddressline1,
								'UserAddressline2'	=> $coach->UserAddressline2,
								'Country'			=> $coach->Country,
								'State'				=> $coach->State,
								'City'				=> $coach->City,
								'Zipcode'			=> $coach->Zipcode,
								'HomePhone'			=> $coach->HomePhone,
								'Mobilephone'		=> $coach->Mobilephone,
								'IsUserActivation'	=> $coach->IsUserActivation,
								'Profilepic'	=> $prof_pic,
								'Latitude'		=> $coach->Latitude,
								'Longitude'		=> $coach->Longitude,
								'UserAgegroup'	=> $coach->UserAgegroup,
								'Username'		=> $coach->Username,
								'Is_coach'		=> $coach->Is_coach,
								'coach_profile' => $coach->coach_profile,		
								'Coach_Website' => $coach->Coach_Website,	
								'coach_sport'	=> trim($coach->coach_sport),	
								'Sportname'		=> $coach->Sportname	
							    );
			}

		//$data['Club_Coaches'] = $club_coaches;
		$this->response($club_coaches);
	}

	public function membersList_get() {
		$club_id = $this->input->get('club_id');

			$get_club_members = $this->mclub->get_club_members($club_id);
			
			foreach($get_club_members as $member){
				$mem_id = null;
				if($member['Membership_ID']){
					$mem_id = $member['Membership_ID'];
				}


			$prof_pic = base_url().'profile_pictures/'.'default-profile.png';
			if($member["Profilepic"]){
			$prof_pic = base_url().'profile_pictures/'.$member["Profilepic"];
			}

			$sp	  = array();
			$get_user_sp = $this->general->get_user_sp_intrests($member['Users_ID']);

			foreach($get_user_sp as $user_sp){
				$sp[] = array("Sport_id" => trim($user_sp["Sport_id"]), "Level" => trim($user_sp["Level"]));
			}
			/*$sp[] = array("Sport_id" => trim($user["Sport_id"]), "Level" => trim($user["Level"]));*/

			$club_members[$member['Users_ID']] =  
			array(
				"Users_ID"		=> $member['Users_ID'],
				"Firstname"		=> $member['Firstname'],
				"Lastname"		=> $member["Lastname"],
				"EmailID"		=> $member["EmailID"],
				"AlternateEmailID" => $member["AlternateEmailID"],
				"DOB"			=> $member["DOB"],
				"Gender"		=> $member["Gender"],
				"UserAddressline1" => $member["UserAddressline1"],
				"UserAddressline2" => $member["UserAddressline2"],
				"Country"		=> $member["Country"],
				"State"			=> $member["State"],
				"City"			=> $member["City"],
				"Zipcode"		=> $member["Zipcode"],
				"HomePhone"		=> $member["HomePhone"],
				"Mobilephone"	=> $member["Mobilephone"],
				"IsUserActivation" => $member["IsUserActivation"],
				"Profilepic"	=> $prof_pic,
				"Latitude"		=> $member["Latitude"],
				"Longitude"		=> $member["Longitude"],
				"UserAgegroup"	=> $member["UserAgegroup"],
				"Username"		=> $member["Username"],
				"Is_coach"		=> $member["Is_coach"],
				"coach_profile" => $member["coach_profile"],
				"Coach_Website" => $member["Coach_Website"],
				"coach_sport"	=> $member["coach_sport"],
				"membership_id"	=> $mem_id,
				"sports_interests" => $sp
				);




				/*$club_members[] = array(
								'user_id'		=> $member->Users_ID,
								'firstname'		=> $member->Firstname,
								'lastname'		=> $member->Lastname,
								'membership_id' => $mem_id,		
							  );*/
			}

		//$data['Club_Members'] = $club_members;
		$this->response($club_members);
	}

	public function listPNP_get(){
		$user_id = $this->input->get('user_id');
		
		$get_club_list = $this->mclub->get_clubs_having_courts($user_id);
		
		foreach($get_club_list as $club){
			$data = array();
			$temp = array();
			$temp1 = array();
			$data['Club_ID']	= $club->Aca_ID;
			$data['Club_Name']	= $club->Aca_name;
			$data['Address1']	= $club->Aca_addr1;
			$data['Address2']	= $club->Aca_addr2;
			$data['City']		= $club->Aca_city;
			$data['State']		= $club->Aca_state;
			$data['Country']	= $club->Aca_country;
			$data['Zip']		= $club->Aca_zip;

			$data['Club_URL']	= null;
 			if($club->Aca_url)
			$data['Club_URL']	= $club->Aca_url;

			$data['Club_Logo']	= null;
			if($club->Aca_logo)
			$data['Club_Logo']	= base_url().'org_logos/'.$club->Aca_logo;

			$data['Contact_Name']  = null;
			$data['Contact_Phone'] = null;
			$data['Contact_Email'] = null;

			if($club->Aca_contact_name)
			$data['Contact_Name']  = $club->Aca_contact_name;

			if($club->Aca_contact_phone)
			$data['Contact_Phone'] = $club->Aca_contact_phone;

			if($club->Aca_contact_email)
			$data['Contact_Email'] = lcfirst($club->Aca_contact_email);
			$temp = null;

			if($club->Aca_sport){
				$sports = json_decode($club->Aca_sport, true);
				foreach($sports as $sport){
					if($sport){
					$sport_det = $this->general->get_sport($sport);
					$temp[]	   = array('sport_id' =>$sport, 'sport_title'=>$sport_det['sport_title']);
					}
				}
			}
			else{
				if($club->Primary_Sport){
					$sport_det = $this->general->get_sport($club->Primary_Sport);
					$temp[] = array('sport_id' =>$sport, 'sport_title'=>$sport_det['sport_title']);
				}
				else{
					$temp  = null;
				}
			}

			$data['Club_Sports'] = $temp;


			$get_club_loc = $this->mclub->get_clubs_locations($club->Aca_ID);

				foreach($get_club_loc as $club_loc){
					$data2 = array();
					$data2['loc_id']   = $club_loc->loc_id;
					$data2['location'] = $club_loc->location;
					$data2['address']  = $club_loc->address;
					$data2['city']     = $club_loc->city;
					$data2['state']    = $club_loc->state;
					$data2['longitude'] = $club_loc->longitude;
					$data2['latitude'] = $club_loc->latitude;
					$temp1[] = $data2;
				}

			$data['Club_court_locations'] = $temp1;
			$data3[] = $data;
		}

		$this->response($data3);
	}

	public function courts_get(){

		$loc_id  = $this->input->get('loc_id');
		$user_id = $this->input->get('user_id');
	
		if($loc_id) {
			$is_club_member = $this->mclub->is_club_member($user_id, $loc_id);
			$get_discount   = $this->mclub->get_member_discount($loc_id);

				$disc	   = 0;
				$is_member = 0;

			if($get_discount['member_discount']){
				$disc = $get_discount['member_discount'];
				if($is_club_member){
				$is_member = 1;
				}
			}
			$get_loc_courts = $this->mclub->get_loc_courts($loc_id);
			foreach($get_loc_courts as $court) {
				$data	  = array();
				$bookings = array();

				$get_court_info		= $this->mclub->get_court_info($court->court_id);				
				$get_court_bookings = $this->mclub->get_court_bookings($court->court_id);

				foreach($get_court_bookings as $booking) {
					$from  = date('D Y-m-d H:i:s', strtotime($booking->res_date.' '.$booking->from_time));
					$to	   = date('D Y-m-d H:i:s', strtotime($booking->res_date.' '.$booking->to_time));
					$numP  = $booking->num_players;
					$pList = $booking->players;
					$bookings[] = array('from' => $from, 'to' => $to, 'numPlayers' => $numP, 'playersList' => $pList);
				}

				$data = json_decode($get_court_info['court_info_json'], true);
				$data['paymethods'] = array(array('pay_method'   => $get_court_info['gateway_name'], 
											'reference_id' => $get_court_info['payment_ref_id']));

				$data['discounts'] = array('is_club_member' => $is_member, 'member_discount_percentage' => $disc);
				$data['current_bookings'] = $bookings;

				$data2[] = $data;
			}
			
			$this->response($data2, 200);
		}
		else {
			$res = array('Error: '."Location ID is Missing");
			$this->response($res, 400);
		}

	}

	public function reserve_court_post() {

		$post_data = json_decode(trim(file_get_contents('php://input')), true);
		/*echo "<pre>";
		print_r($post_data);
		exit;*/

			if(!$post_data){
			$this->response(array('Error: ' . "Empty!")); 
			}

		$data['court_id']		 = $post_data['court_id'];
		$data['loc_id'] 		 = $post_data['loc_id'];
		$data['reserved_by']	 = $post_data['user_id'];
		$res_date				 = date('Y-m-d', strtotime($post_data['res_from']));
		$res_from				 = date('H:i:s', strtotime($post_data['res_from']));
		$res_to					 = date('H:i:s', strtotime($post_data['res_to']));

		$data['res_date']		 = $res_date;
		$data['from_time']		 = $res_from;
		$data['to_time']		 = $res_to;
		$data['created_on']		 = date('Y-m-d H:i:s');
		$data['fee_paid']		 = $post_data['booking_amt'];
		$data['trans_id']		 = $post_data['transaction_id'];
		$data['num_players']	 = $post_data['numPlayers'];
		$data['players']		 = json_encode($post_data['playersList']);
		//$data['players']		 = $post_data['playersList'];
		$data['paid_date']		 = date('Y-m-d H:i:s');
		$data['res_status']		 = "Active";

		$res_court = $this->mclub->reserve_court($data);

		if($res_court){
		 $res = array('Success: '."Court Reservation Done");
		 $res_code = 200;
		}
		else{
		 $res = array('Error: '."Undone, Try again!");
		 $res_code = 400;
		}
		$this->response($res, $res_code);
	}

	public function paytmChecksum_get(){

		$court_id	= $this->input->get('court_id');
		$user_id	= $this->input->get('user_id');
		$txn_amount = $this->input->get('amount');

		$court_det  = $this->mclub->get_court_info($court_id);
		
		if(!$court_id or !$user_id or !$txn_amount){
			$res = array('Error: '."Please provide all the information (CourtID, UserID, Amount)");
			$this->response($res);
			exit;
		}
	
		if($court_det){

			if($court_det['gateway_name'] == 'paytm'){
				$get_det = $this->muser->get_paytm($court_det['payment_ref_id']);
			}
			else{
				$get_det = $this->muser->get_paytm('1');
			}
	
		$PAYTM_MERCHANT_MID = $get_det['paytm_merch_id'];
		$PAYTM_MERCHANT_KEY = $get_det['paytm_merchant_key'];

		 require_once(APPPATH . "/third_party/paytm/config_paytm.php");
		 require_once(APPPATH . "/third_party/paytm/encdec_paytm.php");

		 $order_id = $court_id.'_'.$user_id.'_'.rand(1,10000000);
		 $merch_id = PAYTM_MERCHANT_MID;

		 $paramList["MID"]		 = $merch_id;
		 $paramList["ORDER_ID"]  = $order_id;
		 $paramList["CUST_ID"]   = $user_id;
		 $paramList["INDUSTRY_TYPE_ID"] = 'Retail';
		 //$paramList["CHANNEL_ID"] = 'WEB';
		 $paramList["CHANNEL_ID"] = 'WAP';
		 $paramList["TXN_AMOUNT"] = $txn_amount;
		 $paramList["WEBSITE"]	    = PAYTM_MERCHANT_WEBSITE;
		 //$paramList["WEBSITE"]	    = 'WEBSTAGING';
		 //$paramList["CALLBACK_URL"] = PAYTM_CALLBACK_URL;
		 $paramList["CALLBACK_URL"] = 'https://a2msports.com/rest_services/clubs/paytmSuccess';

		 $checkSum = "";
		 $checkSum = getChecksumFromArray($paramList, PAYTM_MERCHANT_KEY);

		  $htmlForm = "<html><head><title>Merchant Check Out Page</title></head><body><center><h1>Please do not refresh this page...</h1></center><form method='post' action='".PAYTM_TXN_URL."' name='f1'><table border='1'><tbody>";

			 foreach($paramList as $name => $value) {
			 $htmlForm .= '<input type="hidden" name="'.$name.'" value="'.$value.'" />';
			 }

		$htmlForm .= "<input type='hidden' name='CHECKSUMHASH' value='".$checkSum."' /></tbody></table><script type='text/javascript'>
		document.f1.submit();</script></form></body></html>";

		$data['htmlForm'] = $htmlForm;
		echo $htmlForm;
		}
		else{
			$res = array('Error: '."Invalid Court / Court may be inactive!");
			$this->response($res, 400);
		}

	}

	public function paytmSuccess_post(){
			$paytm_return = $_REQUEST;
			
			if($paytm_return['STATUS'] == 'TXN_SUCCESS') {
				$txn  = $paytm_return['TXNID'];
				$stat = 'true';
			}
			else {
				$txn  = '0';
				$stat = 'false';
			}

			$html  = "<html>";
			$html .= "<title>".$stat.",".$txn."</title>";
			$html .= "</html>";

		echo $html;
	}

	public function user_bookings_get(){

		$user_id	= $this->input->get('user_id');
		
		if($user_id){
			$res_court = $this->mclub->get_user_bookings($user_id);
			
			foreach($res_court as $booking) {
					$from = date('D Y-m-d H:i:s', strtotime($booking->res_date.' '.$booking->from_time));
					$to	  = date('D Y-m-d H:i:s', strtotime($booking->res_date.' '.$booking->to_time));
					$bookings[] = array(
						'booking_id' => $booking->res_id, 
						'court_id'   => $booking->court_id, 
						'loc_id'	 => $booking->loc_id, 
						'court_name' => $booking->court_name, 
						'location'	 => $booking->location, 
						'address'	 => $booking->address, 
						'city'		 => $booking->city, 
						'state'		 => $booking->state, 
						'country'	 => $booking->country, 
						'from'		 => $from, 
						'to'		 => $to
						);
			}
			$data['user_bookings'] = $bookings;

			$this->response($data);
		}
	}

	public function reserve_cancel_post(){
		$post_data = json_decode(trim(file_get_contents('php://input')), true);

			if(!$post_data){
			$this->response(array('Error: ' . "Empty!")); 
			}

		//$data['court_id']	 = $post_data['court_id'];
		$booking_id	= $post_data['booking_id'];
		//$data['reserved_by'] = $post_data['user_id'];
		

		$cancel_res = $this->mclub->cancel_res($booking_id);
		if($cancel_res){
			$this->response(array('Success: '."Reservation has canceled.")); 
		}
		else{
			$this->response(array('Error: '."Something went wrong. please contact admin.")); 
		}


	}
	
		public function paypalSuccess_post(){

			//$data['item_number']	= $this->input->get('item_number');

			if($this->input->get('tx')){
			$txn_id	= $this->input->get('tx');
			}
			else{
			$txn_id = $this->input->get('token');
			}

			
			if($this->input->get('st') == 'Completed') {
				$txn  = $txn_id;
				$stat = 'true';
			}
			else {
				$txn  = '0';
				$stat = 'false';
			}

			$html  = "<html>";
			$html .= "<title>".$stat.",".$txn."</title>";
			$html .= "</html>";

		echo $html;
	}

	public function paypalCancel_post(){
		$html = "Last Transaction is cancelled";
		echo $html;
	}
	
		public function paypalChecksum_get(){

		$court_id	= $this->input->get('court_id');
		$user_id	= $this->input->get('user_id');
		$txn_amount = $this->input->get('amount');

		$court_det  = $this->mclub->get_court_info($court_id);
		
		if(!$court_id or !$user_id or !$txn_amount){
			$res = array('Error: '."Please provide all the information (CourtID, UserID, Amount)");
			$this->response($res);
			exit;
		}
	
		if($court_det){

			if($court_det['gateway_name'] == 'paypal'){
				$get_det = $this->muser->get_paypal($court_det['payment_ref_id']);
			}
			else{
				$get_det = $this->muser->get_paypal('5');
			}
	
		$this->load->library('paypal_lib');
		
		$paypalID = $get_det['paypal_merch_id'];
		//echo $paypalID; exit;
		$logo = base_url().'images/logo.png';
		$returnURL = 'https://a2msports.com/rest_services/clubs/paypalSuccess';
		$cancelURL = 'https://a2msports.com/rest_services/clubs/paypalCancel';

		$this->paypal_lib->add_field('business', $paypalID);
		$this->paypal_lib->add_field('return', $returnURL);
		$this->paypal_lib->add_field('cancel_return', $cancelURL);
		//$this->paypal_lib->add_field('notify_url', $notifyURL);
		$this->paypal_lib->add_field('court_id', $court_id);
		//$this->paypal_lib->add_field('player', $this->logged_user);
		$this->paypal_lib->add_field('on0', $user_id);
		$this->paypal_lib->add_field('item_number',  $court_id);
		$this->paypal_lib->add_field('item_name',  $court_det['court_name']);
		$this->paypal_lib->add_field('amount', $txn_amount);        
		//$this->paypal_lib->image($logo);
		
		$htmlForm = $this->paypal_lib->paypal_api_form();


		/*$data['MID']		= PAYTM_MERCHANT_MID;
		$data['ORDER_ID']	= $order_id;
		$data['CUST_ID']	= $user_id;
		$data['TXN_AMOUNT'] = $txn_amount;
		$data['CHECKSUMHASH'] = $checkSum;*/
		$data['htmlForm'] = $htmlForm;

		$res = array($data);	
		//$this->response($res);
		echo $htmlForm;
		}
		else{
			$res = array('Error: '."Invalid Court / Court may be inactive!");
			$this->response($res, 400);
		}

	}
	
	public function testpaypalChecksum_get(){

		$court_id	= $this->input->get('court_id');
		$user_id	= $this->input->get('user_id');
		$txn_amount = $this->input->get('amount');

		$court_det  = $this->mclub->get_court_info($court_id);
		
		if(!$court_id or !$user_id or !$txn_amount){
			$res = array('Error: '."Please provide all the information (CourtID, UserID, Amount)");
			$this->response($res);
			exit;
		}
	
		if($court_det){

		$get_det = $this->muser->get_paypal('8');
			
	
		$this->load->library('paypal_lib');
		
		$paypalID = $get_det['paypal_merch_id'];
		//echo $paypalID; exit;
		$logo = base_url().'images/logo.png';
		$returnURL = 'https://a2msports.com/rest_services/clubs/paypalSuccess';
		$cancelURL = 'https://a2msports.com/rest_services/clubs/paypalCancel';

		$this->paypal_lib->add_field('business', $paypalID);
		$this->paypal_lib->add_field('return', $returnURL);
		$this->paypal_lib->add_field('cancel_return', $cancelURL);
		//$this->paypal_lib->add_field('notify_url', $notifyURL);
		$this->paypal_lib->add_field('court_id', $court_id);
		//$this->paypal_lib->add_field('player', $this->logged_user);
		$this->paypal_lib->add_field('on0', $user_id);
		$this->paypal_lib->add_field('item_number',  $court_id);
		$this->paypal_lib->add_field('item_name',  $court_det['court_name']);
		$this->paypal_lib->add_field('amount', $txn_amount);        
		//$this->paypal_lib->image($logo);
		
		$htmlForm = $this->paypal_lib->sandbox_paypal_api_form();


		/*$data['MID']		= PAYTM_MERCHANT_MID;
		$data['ORDER_ID']	= $order_id;
		$data['CUST_ID']	= $user_id;
		$data['TXN_AMOUNT'] = $txn_amount;
		$data['CHECKSUMHASH'] = $checkSum;*/
		$data['htmlForm'] = $htmlForm;

		$res = array($data);	
		//$this->response($res);
		echo $htmlForm;
		}
		else{
			$res = array('Error: '."Invalid Court / Court may be inactive!");
			$this->response($res, 400);
		}

	}
}